{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Crawl.svelte",
    "../../CrawlElementEditable.svelte",
    "../../CrawlElements.svelte",
    "../../CrawlResults.svelte",
    "../../MyCrawl.svelte",
    "../../MyCrawls.svelte",
    "../../Branding.svelte",
    "../../Navbar.svelte",
    "../../ProfilePictureModal.svelte",
    "../../GoogleLogin.svelte",
    "../../Login.svelte",
    "../../ProfileModal.svelte",
    "../../ProfilePicture.svelte",
    "../../Signup.svelte",
    "../../SignupStepEmail.svelte",
    "../../SignupStepPassword.svelte",
    "../../SignupStepVerification.svelte",
    "../../CircularProgress.svelte",
    "../../Spinner.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import {\n    setCrawl,\n    newestCrawlResult,\n    checkCrawlExists\n  } from \"../../services/firestore\";\n  import { crawlElements, crawlsElementsDefault } from \"../../store\";\n  import { Link } from \"../Router\";\n  import firebase from \"firebase/app\";\n  import { fade, slide } from \"svelte/transition\";\n  import { onMount } from \"svelte\";\n  import CrawlElements from \"./CrawlElements.svelte\";\n  import CrawlResults from \"./CrawlResults.svelte\";\n  import QuotaUsed from \"./QuotaUsed.svelte\";\n  import md5 from \"md5\";\n\n  export let uid;\n  export let loadedUserData;\n  let url = \"\";\n  let crawlName = \"\";\n  let crawlAlreadyExists = \"\";\n  let count_value;\n  let elements = [];\n\n  let results;\n\n  onMount(() => {\n    crawlElements.set(crawlsElementsDefault);\n    const crawlElements$ = crawlElements.subscribe(c => {\n      elements = c[0].elements;\n    });\n  });\n\n  async function addCrawl() {\n    \n    const id = md5(`${crawlName}_${uid}`);\n    try {\n      const createTime = firebase.firestore.Timestamp.now();\n      const ref = await setCrawl({\n        id,\n        uid,\n        crawlName,\n        createTime,\n        url,\n        elements\n      });\n      results = newestCrawlResult(id, createTime);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function checkIfCrawlExists() {\n    if (crawlAlreadyExists.length > 0) return;\n    const id = md5(`${crawlName}_${uid}`);\n    if (await checkCrawlExists(id)) {\n      crawlAlreadyExists = \"Crawl already exists\";\n    } else {\n      crawlAlreadyExists = \"\";\n    }\n  }\n</script>\n\n<style>\n  .elements {\n    margin-top: 12px;\n  }\n\n  .help {\n    margin-left: 15px;\n  }\n  /* .crawl {\n    display: flex;\n    align-items: center;\n  }  */\n\n  .crawlButton {\n    margin: 0 12px;\n  }\n</style>\n\n<main>\n  <section class=\"hero is-small is-light is-bold\">\n    <div class=\"hero-body\">\n      <div class=\"container\">\n        <h1 class=\"title\">Add crawl</h1>\n        <h2 class=\"subtitle\">\n          Crawl xPath or relative elements with children. For detailed\n          information see\n          <Link to=\"/documentation\">documentation</Link>\n        </h2>\n      </div>\n    </div>\n  </section>\n  {#if loadedUserData.quotaUsed >= loadedUserData.quota}\n    <QuotaUsed />\n  {/if}\n  <section class=\"section\">\n    <div class=\"container\">\n      <div class=\"columns\">\n        <div class=\"column is-3\">\n          <input\n            class=\"input is-rounded\"\n            class:is-danger={crawlAlreadyExists.length > 0}\n            placeholder=\"Crawl Name\"\n            bind:value={crawlName}\n            on:input={() => {\n              crawlAlreadyExists = '';\n            }}\n            on:blur={checkIfCrawlExists}\n            type=\"text\" />\n          <p class=\"help is-danger\">{crawlAlreadyExists}</p>\n\n        </div>\n        <div class=\"column is-7\">\n          <input\n            class=\"input is-rounded\"\n            placeholder=\"URL\"\n            bind:value={url}\n            type=\"text\" />\n        </div>\n        <div class=\"column is-2\">\n          <button\n            class=\"button is-primary crawlButton\"\n            disabled={url.length === 0 || !elements.some(e => e.value !== '') || loadedUserData.quotaUsed >= loadedUserData.quota || crawlName.length === 0}\n            on:click={addCrawl}>\n            Crawl\n          </button>\n        </div>\n\n      </div>\n      <div class=\"columns elements\">\n        <div class=\"cloumn is-5 container\">\n\n          <CrawlElements {elements} parentIndeces={[]} storeId={crawlsElementsDefault[0].id}/>\n        </div>\n        <div class=\"column is-6 container text\">\n          {#if $results}\n            <!-- {#if !$results[0] || !$results[0].crawlResults || $results[0].crawlResults.length === 0} -->\n            {#if $results.length === 0}\n              <progress class=\"progress is-small is-primary\" max=\"100\">\n                15%\n              </progress>\n            {:else if $results[0].error}\n              <div class=\"notification is-danger is-light\">\n                {$results[0].error}\n              </div>\n            {:else}\n              <CrawlResults results={$results[0].crawlResults} />\n            {/if}\n          {/if}\n        </div>\n\n      </div>\n    </div>\n  </section>\n</main>\n",
    "<script>\n  import { crawlElements } from \"../../store\";\n  export let element;\n  export let parentIndeces;\n  export let storeId;\n\n  let elementName = element.name;\n  let elementValue = element.value;\n  let elements;\n  const crawlElements$ = crawlElements.subscribe(c => {\n    const storedCrawl = c.find(e => e.id === storeId);\n    if (storedCrawl) elements = storedCrawl.elements;\n  });\n\n  function setElement() {\n    let elementCopy = [...elements];\n    let ref = elementCopy;\n    for (const i of parentIndeces) {\n      ref = ref[i].children;\n    }\n\n    const parentElement = ref.find(r => r.id === element.id);\n    const index = ref.indexOf(parentElement);\n    ref[index].value = elementValue;\n    ref[index].name = elementName;\n    crawlElements.update(c => {\n      const crawlEdit = c.find(e => e.id === storeId);\n      crawlEdit.elements = [...elementCopy];\n      return c;\n    });\n  }\n\n  function addChildElement() {\n    let elementCopy = [...elements];\n    let ref = elementCopy;\n    for (const i of parentIndeces) {\n      ref = ref[i].children;\n    }\n    const parentElement = ref.find(r => r.id === element.id);\n    const index = ref.indexOf(parentElement);\n    ref[index].children.push({\n      id: Date.now(),\n      value: \"\",\n      name: \"\",\n      children: []\n    });\n    crawlElements.set([...elementCopy]);\n  }\n\n  function removeElement() {\n    let elementCopy = [...elements];\n    let ref = elementCopy;\n    for (const i of parentIndeces) {\n      ref = ref[i].children;\n    }\n    const elementToRemove = ref.find(r => r.id === element.id);\n    const index = ref.indexOf(elementToRemove);\n    if (index !== -1) {\n      ref.splice(index, 1);\n    }\n    crawlElements.set([...elementCopy]);\n  }\n</script>\n\n<style>\n  .icon {\n    pointer-events: initial !important;\n  }\n</style>\n\n<main>\n  <div class=\"columns\">\n    <div class=\"column is-8\">\n      <div class=\"field control has-icons-left has-icons-right\">\n        <input\n          class=\"input\"\n          type=\"text\"\n          placeholder=\"xPath\"\n          bind:value={elementValue}\n          on:input={setElement} />\n        <span\n          on:click={removeElement}\n          class=\"icon is-small is-left has-text-danger\">\n          <i class=\"fas fa-minus-circle\" />\n        </span>\n        {#if !element.children || (element.children.length === 0 && element.value !== '')}\n          <span\n            on:click={addChildElement}\n            class=\"icon is-small is-right has-text-success\">\n            <i class=\"fas fa-plus-circle\" />\n          </span>\n        {/if}\n      </div>\n    </div>\n    <div class=\"column is-4\">\n      <div class=\"field control\">\n        <input\n          class=\"input\"\n          type=\"text\"\n          placeholder=\"Name\"\n          bind:value={elementName}\n          on:input={setElement} />\n      </div>\n    </div>\n  </div>\n</main>\n",
    "<script>\n  import { fade } from \"svelte/transition\";\n  import { crawlElements } from \"../../store\";\n  import CrawlElementEditable from \"./CrawlElementEditable.svelte\";\n\n  export let elements;\n  export let storeId;\n  let storedElements;\n  const crawlElements$ = crawlElements.subscribe(c => {\n\n     const storedCrawl = c.find(s => s.id === storeId);\n     if (storedCrawl) storedElements = storedCrawl.elements;\n  });\n\n  export let parentIndeces;\n  export let staticView = false;\n\n  function addElement() {\n    let elementCopy = [...storedElements];\n    let ref = elementCopy;\n    for (const i of parentIndeces) {\n      ref = ref[i].children;\n    }\n    ref.push({ id: Date.now(), value: \"\", name: \"\", children: [] });\n    crawlElements.update(c => {\n      const crawlEdit = c.find(e => e.id === storeId)\n      crawlEdit.elements = [...elementCopy]\n      return c;\n      });\n  }\n\n</script>\n\n<style>\n  ul {\n    padding: 0.2em 0 0 0.5em;\n    margin: 0 0 0 0.5em;\n    list-style: none;\n    border-left: 1px solid;\n  }\n\n  li {\n    padding: 0.2em 0;\n    display: block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n</style>\n\n<main>\n  <ul class=\"has-text-grey-lighter\">\n    {#each elements as element, i (element.id)}\n      <li class=\"has-text-grey-dark\">\n        {#if staticView}\n          {element.value}\n        {:else}\n          <CrawlElementEditable\n            {element}\n            {parentIndeces} {storeId} />\n        {/if}\n        {#if element.children && element.children.length > 0}\n          <ul class=\"has-text-grey-lighter\">\n            <svelte:self\n              on:addElement={addElement}\n              elements={element.children}\n              parentIndeces={[...parentIndeces, i]}\n              {staticView} />\n          </ul>\n        {/if}\n\n      </li>\n    {/each}\n    {#if !staticView}\n      <button class=\"button is-secondary\" on:click={addElement}>+</button>\n    {/if}\n  </ul>\n\n</main>\n",
    "<script>\n  import CrawlResult from \"./CrawlResult.svelte\";\n  export let results;\n  console.log(results)\n</script>\n\n<style>\n  ul {\n    padding: 0.2em 0 0 0.5em;\n    margin: 0 0 0 0.5em;\n    list-style: none;\n    border-left: 1px solid #eee;\n  }\n\n  li {\n    padding: 0.2em 0;\n  }\n</style>\n\n<div>\n  <ul>\n    {#each results as result}\n      <li>\n        <CrawlResult {result} />\n        {#if result.parent}\n          <ul>\n            <svelte:self results={result.result} />\n          </ul>\n        {/if}\n      </li>\n    {/each}\n  </ul>\n</div>\n",
    "<script>\n  import { collectionData, docData } from \"rxfire/firestore\";\n  import { startWith } from \"rxjs/operators\";\n  import { fade } from \"svelte/transition\";\n  import { onMount } from \"svelte\";\n  import {\n    crawlResults,\n    deleteCrawl,\n    setReCrawl,\n    newestCrawlResult\n  } from \"../../services/firestore\";\n  import firebase from \"firebase/app\";\n  import { crawlElements } from \"../../store\";\n  import CrawlElements from \"./CrawlElements.svelte\";\n  import CrawlResults from \"./CrawlResults.svelte\";\n  import EditCrawl from \"./EditCrawl.svelte\";\n  export let crawl;\n  export let userHasQuotaLeft;\n\n  let showResults = false;\n  let showElements = false;\n  let results = crawlResults(crawl.id);\n  let result;\n  let editCrawl = false;\n  let crawlEditable;\n  let elements;\n\n  let reCrawlLoading = false;\n\n  const crawlElements$ = crawlElements.subscribe(c => {\n    const storedCrawl = c.find(e => e.id === crawl.id);\n    if (storedCrawl) {\n      elements = storedCrawl.elements;\n    }\n  });\n\n  onMount(() => {\n    crawlElements.update(c => [\n      ...c,\n      { id: crawl.id, elements: crawl.crawlElements }\n    ]);\n  });\n\n  async function reCrawl() {\n    reCrawlLoading = true;\n    const createTime = firebase.firestore.Timestamp.now();\n    await setReCrawl(crawl.id, createTime);\n    result = newestCrawlResult(crawl.id, createTime).subscribe(r => {\n      if (r.length > 0) {\n        reCrawlLoading = false;\n      }\n    });\n  }\n\n  let deleteCrawlLoading = false;\n  function deleteUserCrawl() {\n    deleteCrawlLoading = true;\n    deleteCrawl(crawl.id).then(() => (deleteCrawlLoading = false));\n  }\n\n\n  function resetCrawlElements() {\n    editCrawl = false;\n    crawlElements.update(c => {\n      const crawlEdit = c.find(e => e.id === crawl.id);\n      crawlEdit.elements = crawl.crawlElements;\n      return c;\n    });\n  }\n</script>\n\n<style>\n  .urlBlock {\n    display: flex;\n    flex-direction: column;\n  }\n  .url {\n    display: block;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  .elements {\n    display: inline-block;\n    overflow: hidden !important;\n    white-space: nowrap;\n    text-overflow: ellipsis !important;\n  }\n\n  .edit {\n    cursor: pointer;\n  }\n</style>\n\n<div class=\"box\">\n  <div class=\"columns\">\n    <div class=\"column is-3 urlBlock\">\n      <div class=\"url\">\n        <a href={crawl.url} target=\"_blank\">{crawl.crawlName}</a>\n      </div>\n\n    </div>\n    <div class=\"column is-2\">{crawl.createDate.toDate().toLocaleString()}</div>\n    <div class=\"column is-3 elements\">\n      Elements\n      {#if showElements}\n        <span\n          class=\"icon is-small has-text-link\"\n          on:click={() => (showElements = !showElements)}>\n          <i class=\"fas fa-chevron-up\" />\n        </span>\n        <CrawlElements\n          storeId={crawl.id}\n          {elements}\n          parentIndeces={[]}\n          staticView={true} />\n        <span\n          class=\"icon is-small edit\"\n          on:click={() => {\n            editCrawl = true;\n          }}>\n          <i class=\"fas fa-edit\" />\n        </span>\n        {#if editCrawl}\n          <EditCrawl\n            on:cancel={resetCrawlElements}\n            on:close={() => {\n              editCrawl = false;\n            }}\n            {elements}\n            {crawl} />\n        {/if}\n      {:else}\n        <span\n          class=\"icon is-small has-text-link\"\n          on:click={() => (showElements = !showElements)}>\n          <i class=\"fas fa-chevron-down\" />\n        </span>\n      {/if}\n    </div>\n\n    <div class=\"column is-3\">\n      Result\n      {#if showResults}\n        <span\n          class=\"icon is-small has-text-link\"\n          on:click={() => (showResults = !showResults)}>\n          <i class=\"fas fa-chevron-up\" />\n        </span>\n        {#each $results as result}\n          {#if result.crawlResults}\n            <CrawlResults results={result.crawlResults} />\n          {:else if result.error}\n            <ul>\n              <li>Run had errors</li>\n            </ul>\n          {:else}\n            <ul>\n              <li>Loading</li>\n            </ul>\n          {/if}\n        {/each}\n      {:else}\n        <span\n          class=\"icon is-small has-text-link\"\n          on:click={() => (showResults = !showResults)}>\n          <i class=\"fas fa-chevron-down\" />\n        </span>\n      {/if}\n\n      <!-- <div class=\"bd-category is-active\">RESULT</div> -->\n\n      <!-- <CrawlResults /> -->\n    </div>\n    <div class=\"column is-1\">\n      <button\n        on:click={reCrawl}\n        disabled={!userHasQuotaLeft}\n        class=\"button\"\n        class:is-loading={reCrawlLoading}\n        title=\"Recrawl\">\n        <span class=\"icon\">\n          <i class=\"fas fa-redo-alt\" />\n        </span>\n      </button>\n      <button\n        on:click={deleteUserCrawl}\n        class:is-loading={deleteCrawlLoading}\n        class=\"button\"\n        title=\"Delete\">\n        <span class=\"icon\">\n          <i class=\"fas fa-minus-circle has-text-danger\" />\n        </span>\n      </button>\n    </div>\n  </div>\n</div>\n",
    "<script>\n  import { onDestroy } from \"svelte\";\n  import { userCrawls } from \"../../services/firestore\";\n  import MyCrawl from \"./MyCrawl.svelte\";\n  import QuotaUsed from \"./QuotaUsed.svelte\";\n  export let uid;\n  export let loadedUserData;\n  let crawls = [];\n  let filteredCrawls = [];\n  let userCralws = userCrawls(uid);\n  let searchText = \"\";\n  let nameSortedDesc = false;\n  let dateSortedDesc = false;\n  const userCrawls$ = userCralws.subscribe(c => {\n    crawls = c;\n    if (searchText === \"\") {\n      filteredCrawls = c;\n    }\n  });\n\n  $: userHasQuotaLeft = loadedUserData.quotaUsed < loadedUserData.quota;\n\n  onDestroy(() => {\n    userCrawls$.unsubscribe();\n  });\n\n  function filterCrawls() {\n    if (searchText === \"\") {\n      filteredCrawls = crawls;\n      return;\n    }\n    filteredCrawls = crawls.filter(c => {\n      return (\n        c.crawlName.toLowerCase().includes(searchText.toLowerCase()) ||\n        c.url.toLowerCase().includes(searchText.toLowerCase())\n      );\n    });\n  }\n\n  function sortDate() {\n    filteredCrawls = filteredCrawls.sort((a, b) => {\n      const dateASeconds = a.createDate.seconds;\n      const dateBSeconds = b.createDate.seconds;\n      dateSortedDesc = !dateSortedDesc;\n      return dateSortedDesc\n        ? dateASeconds - dateBSeconds\n        : dateBSeconds - dateASeconds;\n    });\n  }\n\n  function sortName() {\n    filteredCrawls = filteredCrawls.sort((a, b) => {\n      const nameA = a.crawlName.toUpperCase();\n      const nameB = b.crawlName.toUpperCase();\n      let returnValue = 0;\n      if (nameA < nameB) {\n        returnValue = nameSortedDesc ? -1 : 1;\n      } else if (nameA > nameB) {\n        returnValue = nameSortedDesc ? 1 : -1;\n      }\n      nameSortedDesc = !nameSortedDesc;\n      return returnValue;\n    });\n  }\n</script>\n\n<style>\n  .input,\n  .input:focus {\n    border-top: none;\n    border-left: none;\n    border-right: none;\n    border-radius: 0;\n    box-shadow: none;\n  }\n\n  .input:focus,\n  .input:hover {\n    border-bottom-color: white;\n    border-bottom-width: 1px;\n  }\n  .sortIcon {\n    cursor: pointer;\n  }\n  .headerColumn {\n    display: flex;\n    align-items: center;\n  }\n  .headerText {\n    margin-right: 5px;\n  }\n</style>\n\n<section class=\"hero is-small is-light is-bold\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <h1 class=\"title\">My Crawls</h1>\n      <!-- <h2 class=\"subtitle\">\n         <Link to=\"/documentation\">documentation</Link>\n      </h2> -->\n    </div>\n  </div>\n</section>\n{#if !userHasQuotaLeft}\n  <QuotaUsed />\n{/if}\n\n<section class=\"section\">\n  <div class=\"container\">\n    {#if crawls.length === 0}\n      No crawls yet\n    {:else}\n      <div class=\"box has-background-grey has-text-white\">\n        <div class=\"columns\">\n          <div class=\"column is-3 headerColumn\">\n            <span class=\"headerText\">Name</span>\n            <span\n              class=\"icon is-small has-text-primary sortIcon\"\n              on:click={sortName}>\n              <i class=\"fas fa-sort\" />\n            </span>\n          </div>\n          <div class=\"column is-2 headerColumn\">\n            <span class=\"headerText\">Crawldate</span>\n            <span\n              class=\"icon is-small has-text-primary sortIcon\"\n              on:click={sortDate}>\n              <i class=\"fas fa-sort\" />\n            </span>\n          </div>\n          <div class=\"column is-6\">\n            <div class=\"field\">\n              <p class=\"control has-icons-left\">\n                <input\n                  class=\"input has-background-grey has-text-white\"\n                  bind:value={searchText}\n                  on:input={filterCrawls}\n                  type=\"text\" />\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fas fa-search has-text-white\" />\n                </span>\n              </p>\n            </div>\n          </div>\n\n          <div class=\"column is-1 headerColumn\">\n\n            <span class=\"icon\">\n              <i class=\"fas fa-filter has-text-primary\" />\n            </span>\n\n          </div>\n\n        </div>\n      </div>\n      {#each filteredCrawls as crawl}\n        {#if crawl.createDate}\n          <MyCrawl {crawl} {userHasQuotaLeft} />\n        {/if}\n      {/each}\n    {/if}\n  </div>\n</section>\n",
    "<style>\n.brandText {\n     font-Family: \"herculanum\";\n      font-style: normal;\n      font-display: swap;\n      font-weight: 600;\n      margin-left: 10px;\n      margin-right: 100px;\n      }\n.branding {\n    display:flex;\n    align-items: center;\n}\n\n</style>\n\n<div class=\"branding\">\n<div class=\"brandLogo\">\n  <svg height=\"40px\" version=\"1.1\" viewBox=\"0 0 145 181\" width=\"38px\">\n    <title />\n    <desc />\n    <defs />\n    <g fill=\"none\" fillRule=\"evenodd\" id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\">\n      <g id=\"star-wars-copy\" transform=\"translate(-1757.000000, -2037.000000)\">\n        <g id=\"darth-maul\" transform=\"translate(1757.000000, 2037.000000)\">\n          <path\n            d=\"M12.165,60.5 L12.165,131.3 C12.165,139.13 15.987,146.468\n            22.401,150.962 L24.165,152.198 L58.401,176.162 C66.663,181.946\n            77.667,181.946 85.929,176.162 L120.165,152.198 L121.929,150.962\n            C128.343,146.468 132.165,139.13 132.165,131.3 L132.165,90.5\n            L132.165,60.5 C132.165,27.362 12.165,27.362 12.165,60.5\"\n            fill=\"#323232\"\n            id=\"Fill-59\" />\n          <path\n            d=\"M120.165,42.4994 L120.165,34.0154 L141.381,21.2834\n            L128.649,42.4994 L120.165,42.4994 Z\"\n            fill=\"#BEBEBE\"\n            id=\"Fill-60\" />\n          <path\n            d=\"M24.165,42.4994 L24.165,34.0154 L2.949,21.2834 L15.681,42.4994\n            L24.165,42.4994 Z\"\n            fill=\"#BEBEBE\"\n            id=\"Fill-61\" />\n          <path\n            d=\"M12.165,114.5 L12.165,114.5 C5.565,114.5 0.165,109.1 0.165,102.5\n            L0.165,84.5 C0.165,77.9 5.565,72.5 12.165,72.5 L12.165,72.5\n            C18.765,72.5 24.165,77.9 24.165,84.5 L24.165,102.5 C24.165,109.1\n            18.765,114.5 12.165,114.5\"\n            fill=\"#323232\"\n            id=\"Fill-62\" />\n          <path\n            d=\"M132.165,114.5 L132.165,114.5 C125.565,114.5 120.165,109.1\n            120.165,102.5 L120.165,84.5 C120.165,77.9 125.565,72.5 132.165,72.5\n            L132.165,72.5 C138.765,72.5 144.165,77.9 144.165,84.5 L144.165,102.5\n            C144.165,109.1 138.765,114.5 132.165,114.5\"\n            fill=\"#323232\"\n            id=\"Fill-63\" />\n          <path\n            d=\"M72.165,0.5 C39.027,0.5 12.165,27.362 12.165,60.5 L18.165,72.5\n            L12.165,96.5 L42.165,150.5 L60.165,132.5 L66.165,150.5 L78.165,150.5\n            L84.165,132.5 L102.165,150.5 L132.165,90.5 L126.165,72.494\n            L132.165,60.5 C132.165,27.362 105.303,0.5 72.165,0.5\"\n            fill=\"#921816\"\n            id=\"Fill-64\" />\n          <path\n            d=\"M78.165,90.4994 L102.165,72.4994 L120.165,84.4994\n            L102.165,108.4994 L78.165,90.4994 Z\"\n            fill=\"#323232\"\n            id=\"Fill-65\" />\n          <path\n            d=\"M96.165,84.5 C92.847,84.5 90.165,87.182 90.165,90.5\n            C90.165,93.818 92.847,96.5 96.165,96.5 C99.483,96.5 102.165,93.818\n            102.165,90.5 C102.165,87.182 99.483,84.5 96.165,84.5\"\n            fill=\"#F1C40F\"\n            id=\"Fill-66\" />\n          <path\n            d=\"M66.165,90.4994 L42.165,72.4994 L24.165,84.4994 L36.165,108.4994\n            L66.165,90.4994 Z\"\n            fill=\"#323232\"\n            id=\"Fill-67\" />\n          <path\n            d=\"M48.165,84.5 C44.847,84.5 42.165,87.182 42.165,90.5\n            C42.165,93.818 44.847,96.5 48.165,96.5 C51.483,96.5 54.165,93.818\n            54.165,90.5 C54.165,87.182 51.483,84.5 48.165,84.5\"\n            fill=\"#F1C40F\"\n            id=\"Fill-68\" />\n          <path\n            d=\"M84.165,156.4994 L60.165,156.4994 L56.499,174.8294\n            L58.401,176.1614 C66.663,181.9454 77.667,181.9454 85.929,176.1614\n            L87.831,174.8294 L84.165,156.4994 Z\"\n            fill=\"#921816\"\n            id=\"Fill-69\" />\n          <path\n            d=\"M72.165,18.4994 L60.165,36.4994 L72.165,90.4994 L84.165,36.4994\n            L72.165,18.4994 Z\"\n            fill=\"#323232\"\n            id=\"Fill-70\" />\n          <path\n            d=\"M42.165,84.4994 L54.165,66.4994 L48.165,48.4994 L30.165,66.4994\n            L30.165,36.4994 L36.165,54.4994 L48.165,42.4994 L60.165,66.4994\n            L42.165,84.4994 Z\"\n            fill=\"#323232\"\n            id=\"Fill-71\" />\n          <path\n            d=\"M30.165,54.4994 L21.681,36.4994 L30.165,28.0154 L38.649,36.4994\n            L30.165,54.4994 Z\"\n            fill=\"#323232\"\n            id=\"Fill-72\" />\n          <path\n            d=\"M72.165,42.4994 L78.165,36.4994 L72.165,12.4994 L66.165,36.4994\n            L72.165,42.4994 Z\"\n            fill=\"#BEBEBE\"\n            id=\"Fill-73\" />\n          <path\n            d=\"M30.165,42.4994 L36.165,36.4994 L30.165,12.4994 L24.165,36.4994\n            L30.165,42.4994 Z\"\n            fill=\"#BEBEBE\"\n            id=\"Fill-74\" />\n          <path\n            d=\"M102.165,84.4994 L90.165,66.4994 L96.165,48.4994 L114.165,66.4994\n            L114.165,36.4994 L108.165,54.4994 L96.165,42.4994 L84.165,66.4994\n            L102.165,84.4994 Z\"\n            fill=\"#323232\"\n            id=\"Fill-75\" />\n          <path\n            d=\"M114.165,54.4994 L122.649,36.4994 L114.165,28.0154\n            L105.681,36.4994 L114.165,54.4994 Z\"\n            fill=\"#323232\"\n            id=\"Fill-76\" />\n          <path\n            d=\"M114.165,42.4994 L108.165,36.4994 L114.165,12.4994\n            L120.165,36.4994 L114.165,42.4994 Z\"\n            fill=\"#BEBEBE\"\n            id=\"Fill-77\" />\n          <path\n            d=\"M36.165,90.4994 L18.165,120.4994 L36.165,132.4994\n            L54.165,108.4994 L36.165,126.4994 L24.165,120.4994 L36.165,90.4994 Z\"\n            fill=\"#323232\"\n            id=\"Fill-78\" />\n          <path\n            d=\"M108.165,90.4994 L126.165,120.4994 L108.165,132.4994\n            L90.165,108.4994 L108.165,126.4994 L120.165,120.4994\n            L108.165,90.4994 Z\"\n            fill=\"#323232\"\n            id=\"Fill-79\" />\n          <path\n            d=\"M72.165,126.4994 L84.165,120.4994 L72.165,132.4994\n            L60.165,120.4994 L72.165,126.4994 Z\"\n            fill=\"#323232\"\n            id=\"Fill-80\" />\n          <path\n            d=\"M69.165,156.4994 L60.165,168.4994 L66.165,174.4994\n            L66.165,168.4994 L72.165,162.4994 L78.165,168.4994 L78.165,174.4994\n            L84.165,168.4994 L75.165,156.4994 L69.165,156.4994 Z\"\n            fill=\"#323232\"\n            id=\"Fill-81\" />\n        </g>\n      </g>\n    </g>\n  </svg>\n  </div>\n  <div class=\"is-hidden-mobile brandText has-text-primary\">Darth Crawl</div>\n</div>\n",
    "<script>\n  import { Link } from \"../Router\";\n  import Branding from \"./Branding.svelte\";\n  import UserActions from \"./UserActions.svelte\";\n\n  let showBurger = false;\n  let showDropdown = false;\n  function toggleBurger() {\n    showBurger = !showBurger;\n  }\n\n  function toggleNavbarlink() {\n    showDropdown = !showDropdown;\n  }\n\n  function linkClick(e) {\n    e.preventDefault();\n    showBurger = false;\n  }\n  function getProps({ location, href, isPartiallyCurrent, isCurrent }) {\n    const isActive = href === \"/\" ? isCurrent : isPartiallyCurrent || isCurrent;\n\n    // The object returned here is spread on the anchor element's attributes\n    if (isActive) {\n      return { class: \"active\" };\n    }\n    return {};\n  }\n</script>\n\n<style>\n  .navend {\n    margin-left: auto;\n    margin-right:10px;\n    display: flex;\n    align-items: center;\n  }\n</style>\n\n<nav class=\"navbar is-dark\" role=\"navigation\" aria-label=\"main navigation\">\n  <div class=\"navbar-brand\">\n    <div class=\"navbar-item\">\n      <Link to=\"/\" on:click={linkClick}>\n        <Branding />\n      </Link>\n\n    </div>\n\n    <div class=\"navend is-hidden-desktop\">\n      <UserActions />\n      <a\n        on:click={toggleBurger}\n        class=\"navbar-burger burger\"\n        class:is-active={showBurger}\n        aria-label=\"menu\"\n        aria-expanded=\"false\"\n        data-target=\"navbarBasicExample\">\n        <span aria-hidden=\"true\" />\n        <span aria-hidden=\"true\" />\n        <span aria-hidden=\"true\" />\n      </a>\n    </div>\n\n  </div>\n\n  <div id=\"navbarBasicExample\" class=\"navbar-menu\" class:is-active={showBurger}>\n    <div class=\"navbar-start\">\n\n      <Link className=\"navbar-item\" to=\"/mycrawls\" on:click={linkClick}>\n        My Crawls\n      </Link>\n\n      <Link className=\"navbar-item\" to=\"/crawl\" on:click={linkClick}>\n        Crawl\n      </Link>\n\n      <Link className=\"navbar-item\" to=\"/documentation\" on:click={linkClick}>\n        Documentation\n      </Link>\n\n      <div class=\"navbar-item has-dropdown is-hoverable\">\n        <a class=\"navbar-link\" on:click={toggleNavbarlink}>\n          <div>More</div>\n        </a>\n        {#if !showBurger || showDropdown}\n          <div class=\"navbar-dropdown\">\n            <a class=\"navbar-item\">About</a>\n            <a class=\"navbar-item\">Jobs</a>\n            <a class=\"navbar-item\">Contact</a>\n            <hr class=\"navbar-divider\" />\n            <a class=\"navbar-item\">Report an issue</a>\n          </div>\n        {/if}\n      </div>\n\n    </div>\n\n  </div>\n  <div class=\"navend is-hidden-touch\">\n    <UserActions />\n  </div>\n</nav>\n",
    "<script>\n  import { onMount, onDestroy } from \"svelte\";\n  import { auth } from \"../../../conf/firebase\";\n  import { storageRef } from \"../../../conf/firebase\";\n  import { authState } from \"rxfire/auth\";\n  import ProfilePicture from \"../ProfilePicture.svelte\";\n  import Spinner from \"../../utils/Spinner.svelte\";\n  import CircularProgress from \"../../utils/CircularProgress.svelte\";\n  import { setUserPofilePicture } from \"../../../services/firestore\";\n\n  export let showChangeProfilePicture = true;\n  export let user;\n\n  $: userStorage = `users/${user.uid}`;\n\n  let files;\n  let uploadError;\n  let imgsLoading = false;\n  let isLoading = false;\n  let profilePictureSelected;\n  let profilePictures = [];\n  let uploadProgress;\n  let deleteLoading;\n  async function setProfilePicture() {\n    const setPath = profilePictures.find(\n      p => p.imgUrl === profilePictureSelected\n    );\n    await setUserPofilePicture(setPath.path, user.uid);\n    showChangeProfilePicture = false;\n  }\n\n  async function deleteFile() {\n    deleteLoading = true;\n    await storageRef.child(\n      profilePictures.find(p => p.imgUrl === profilePictureSelected).path\n    ).delete();\n    profilePictures = profilePictures.filter(p => p.imgUrl !== profilePictureSelected);\n    profilePictureSelected = \"\";\n    // Delete the file\n    deleteLoading = false;\n  }\n\n  function uploadFiles(e) {\n    console.log(e.target.files);\n    const file = e.target.files[0];\n    if (!file) return console.log(\"No file seleceted\");\n\n    const storagePath = `${userStorage}/${file.name}`;\n\n    var reader = new FileReader();\n    let picture = {};\n\n    reader.onload = e => {\n      console.log(\"ON LOAD\");\n      picture = {\n        path: storagePath,\n        imgUrl: e.target.result,\n        uploadProgress: 0\n      };\n      profilePictures = [...profilePictures, picture];\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n\n    console.log(profilePictures);\n    const uploadTask = storageRef\n      .child(`users/${user.uid}/${file.name}`)\n      .put(file);\n\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log(\"Upload is \" + progress + \"% done\");\n        profilePictures = profilePictures.map(p => {\n          if (p.imgUrl === picture.imgUrl) {\n            p.uploadProgress = progress;\n          }\n          return p;\n        });\n      },\n      error => {\n        uploadError = error;\n      },\n      () => {\n        profilePictures = profilePictures.map(p => {\n          if (p.imgUrl === picture.imgUrl) {\n            p.uploadProgress = 101;\n          }\n          return p;\n        });\n      }\n    );\n  }\n  onMount(async () => {\n    imgsLoading = true;\n    const listRes = await storageRef.child(\"profile_pics_public\").listAll();\n    const userRes = await storageRef.child(userStorage).listAll();\n\n    const items = [...listRes.items, ...userRes.items];\n    const imgPromises = items.map(async i => {\n      return { path: i.location.path, imgUrl: await i.getDownloadURL() };\n    });\n\n    profilePictures = await Promise.all(imgPromises);\n    imgsLoading = false;\n  });\n</script>\n\n<style>\n  .modal {\n    z-index: 100;\n  }\n  .footerContainer {\n    display: flex;\n    align-items: center;\n  }\n\n  .modal-card {\n    max-width: 600px;\n  }\n\n  .spinnerContainer {\n    display: flex;\n    justify-content: center;\n  }\n\n  .imgsContainer {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .selected {\n    border-radius: 50%;\n    border: 1px solid !important;\n  }\n\n  .profilePictureContainer {\n    border-radius: 50%;\n    position: relative;\n    border: 1px solid transparent;\n  }\n\n  .inputfile {\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n  }\n\n  .inputfile + label {\n    border-radius: 50%;\n    margin: 10px;\n    height: 80px;\n    width: 80px;\n    font-size: 1.25em;\n    font-weight: 700;\n  }\n\n  .fileInputLabel {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-bottom: 5px;\n  }\n\n  .inputfile + label {\n    cursor: pointer;\n  }\n</style>\n\n<div class=\"modal is-active\" class:is-active={showChangeProfilePicture}>\n  <div class=\"modal-background\" />\n  <div class=\"modal-card\">\n    <header class=\"modal-card-head\">\n      <span class=\"modal-card-title has-text-white\">\n        Select profile picture\n      </span>\n\n      <button\n        class=\"delete\"\n        aria-label=\"close\"\n        on:click={() => (showChangeProfilePicture = false)} />\n    </header>\n    <section class=\"modal-card-body\">\n      {#if imgsLoading}\n        <div class=\"spinnerContainer\">\n          <Spinner />\n        </div>\n      {:else}\n        <div class=\"imgsContainer\">\n          {#each profilePictures as profilePicture}\n            <div\n              class:selected={profilePictureSelected === profilePicture.imgUrl}\n              class=\"profilePictureContainer\">\n              <ProfilePicture\n                on:click={() => {\n                  profilePictureSelected = profilePicture.imgUrl;\n                }}\n                imgSrc={profilePicture.imgUrl}\n                size=\"L\" />\n              {#if profilePicture.uploadProgress !== undefined && profilePicture.uploadProgress <= 100}\n                <CircularProgress\n                  radius=\"50\"\n                  stroke=\"4\"\n                  progress={profilePicture.uploadProgress} />\n              {/if}\n            </div>\n          {/each}\n          <input\n            type=\"file\"\n            name=\"file\"\n            id=\"file\"\n            class=\"inputfile has-background-black-ter\"\n            on:change={uploadFiles}\n            bind:files />\n          <label for=\"file\" class=\"fileInputLabel has-background-black-ter\">\n            <i class=\"fas fa-upload fa-lg\" />\n          </label>\n        </div>\n      {/if}\n    </section>\n    <footer class=\"modal-card-foot\">\n      <div class=\"footerContainer\">\n        <button\n          class=\"button is-primary is-rounded\"\n          type=\"submit\"\n          disabled={!profilePictureSelected}\n          class:is-loading={isLoading}\n          on:click={setProfilePicture}>\n          Change profile picture\n        </button>\n        <button\n          class=\"button is-rounded\"\n          on:click={() => (showChangeProfilePicture = false)}>\n          Cancel\n        </button>\n        {#if profilePictureSelected && profilePictures.find(p => p.imgUrl === profilePictureSelected && p.path.includes(userStorage))}\n          <button on:click={deleteFile} class=\"button is-rounded has-text-danger\" class:is-loading={deleteLoading}>\n            <span class=\"icon is-small\">\n              <i class=\"fas fa-trash\" />\n            </span>\n          </button>\n        {/if}\n      </div>\n    </footer>\n  </div>\n</div>\n",
    "<script>\n  import { auth, googleProvider } from \"../../conf/firebase\";\n\n  function login() {\n    auth\n      .signInWithPopup(googleProvider)\n      .then(function (result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        console.log(result);\n        // ...\n      })\n      .catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        // ...\n      });\n  }\n</script>\n\n<style>\n  .googleLoginButton {\n    cursor: pointer;\n    margin-left: 10px;\n    padding-top: 7px;\n  }\n</style>\n\n<div class=\"googleLoginButton\" on:click={login}>\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M19.6 10.23c0-.82-.1-1.42-.25-2.05H10v3.72h5.5c-.15.96-.74 2.31-2.04\n      3.22v2.45h3.16c1.89-1.73 2.98-4.3 2.98-7.34z\"\n      fill=\"#4285F4\" />\n    <path\n      d=\"M13.46 15.13c-.83.59-1.96 1-3.46 1-2.64\n      0-4.88-1.74-5.68-4.15H1.07v2.52C2.72 17.75 6.09 20 10 20c2.7 0 4.96-.89\n      6.62-2.42l-3.16-2.45z\"\n      fill=\"#34A853\" />\n    <path\n      d=\"M3.99 10c0-.69.12-1.35.32-1.97V5.51H1.07A9.973 9.973 0 0 0 0 10c0\n      1.61.39 3.14 1.07 4.49l3.24-2.52c-.2-.62-.32-1.28-.32-1.97z\"\n      fill=\"#FBBC05\" />\n    <path\n      d=\"M10 3.88c1.88 0 3.13.81 3.85 1.48l2.84-2.76C14.96.99 12.7 0 10 0 6.09 0\n      2.72 2.25 1.07 5.51l3.24 2.52C5.12 5.62 7.36 3.88 10 3.88z\"\n      fill=\"#EA4335\" />\n  </svg>\n</div>\n",
    "<script>\n  import { auth, googleProvider } from \"../../conf/firebase\";\n  import { validateEmail, validatePassword } from \"../utils/helper\";\n  import GoogleLogin from \"./GoogleLogin.svelte\";\n  let email;\n  let password;\n  let submitted = false;\n\n  $: passwordValid = validatePassword(password);\n  let loginError;\n  $: emailValid = validateEmail(email);\n\n  let showDialog;\n  let isLoading = false;\n\n  function resetLoginError() {\n    loginError = null\n  }\n\n  function loginWithEmail() {\n    loginError = null;\n    console.log(\"login called\");\n    isLoading = true;\n    const loginPromise = auth.signInWithEmailAndPassword(email, password);\n    loginPromise\n      .then(() => {\n        isLoading = false;\n        showDialog = false;\n      })\n      .catch((err) => {\n        isLoading = false;\n        loginError = err.message;\n      });\n  }\n\n</script>\n\n<style>\n  .footerContainer {\n    display: flex;\n    align-items: center;\n  }\n\n  .modal-card {\n    max-width: 440px;\n  }\n\n  .signinButton {\n    margin-bottom: 0 !important;\n  }\n</style>\n\n<div>\n  <button\n    class=\"button is-light is-rounded\"\n    on:click={() => {\n      showDialog = true;\n    }}>\n    Sign in\n  </button>\n  <div class=\"modal is-active\" class:is-active={showDialog}>\n    <div class=\"modal-background\" />\n    <div class=\"modal-card\">\n      <header class=\"modal-card-head\">\n        <span class=\"modal-card-title has-text-white\">Log in</span>\n\n        <button\n          class=\"delete\"\n          aria-label=\"close\"\n          on:click={() => (showDialog = false)} />\n      </header>\n      <form\n        id=\"login\"\n        on:submit={(e) => {\n          e.preventDefault();\n          submitted = true;\n          if (emailValid && passwordValid) loginWithEmail();\n        }}>\n        <section class=\"modal-card-body\">\n\n          <div class=\"field\">\n            <label class=\"label has-text-white\">Email</label>\n            <div class=\"control has-icons-left has-icons-right\">\n              <input\n                class=\"input\"\n                type=\"email\"\n                placeholder=\"Email input\"\n                autocomplete=\"username\"\n                bind:value={email}\n                on:input={resetLoginError} />\n              <span class=\"icon is-small is-left\">\n                <i class=\"fas fa-envelope\" />\n              </span>\n            </div>\n            {#if submitted && email && emailValid !== undefined && !emailValid}\n              <p class=\"help is-danger\">This email is invalid</p>\n            {/if}\n          </div>\n          <div class=\"field\">\n            <label class=\"label has-text-white\">Password</label>\n            <div class=\"control has-icons-left has-icons-right\">\n              <input\n                class=\"input\"\n                type=\"password\"\n                placeholder=\"Password\"\n                autocomplete=\"current-password\"\n                bind:value={password} \n                on:input={resetLoginError}/>\n              <span class=\"icon is-small is-left\">\n                <i class=\"fas fa-key\" />\n              </span>\n            </div>\n            {#if submitted && password && passwordValid !== undefined && !passwordValid}\n              <p class=\"help is-danger\">This password is invalid</p>\n            {/if}\n          </div>\n          {#if loginError}\n            <p class=\"help is-danger\">{loginError}</p>\n          {/if}\n        </section>\n        <footer class=\"modal-card-foot\">\n          <div class=\"footerContainer\">\n            <button\n              class=\"button is-primary is-rounded signinButton\"\n              type=\"submit\"\n              disabled={!email || !password}\n              class:is-loading={isLoading}>\n              Sign in\n            </button>\n            <span>or sign in with</span>\n            <GoogleLogin />\n          </div>\n        </footer>\n      </form>\n    </div>\n  </div>\n</div>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { userDbData } from \"../../store\";\n  import ProfilePicture from \"./ProfilePicture.svelte\";\n  import ProfilePictureModal from \"./ChangeProfilePicture/ProfilePictureModal.svelte\";\n  import { auth, googleProvider } from \"../../conf/firebase\";\n  import { navigate, Link } from \"../Router\";\n  export let user;\n  let showProfileMenu = false;\n  let isLoading = false;\n  let showChangeProfilePicture = false;\n  let imgSrc;\n\n  let loadedUserData;\n  const userDbData$ = userDbData.subscribe(d => {\n    imgSrc = d.imgSrc;\n  });\n\n  function logout() {\n    isLoading = true;\n    const logoutPromise = auth.signOut();\n    logoutPromise.then(() => {\n      isLoading = false;\n      showProfileMenu = false;\n      navigate(\"/\", { replace: true });\n    });\n  }\n</script>\n\n<style>\n  .modal-card {\n    margin-right: 10px !important;\n    margin-top: 10px;\n    width: 320px;\n  }\n  .modal {\n    justify-content: flex-start;\n    top: 4em;\n  }\n\n  .modal-card-head {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  .modal-card-foot {\n    display: flex;\n    justify-content: center;\n  }\n\n  .icon {\n    border-radius: 50%;\n  }\n\n  .settings {\n    border-radius: 1em;\n    display: flex;\n    align-items: center;\n    width: fit-content;\n    padding-right: 10px;\n  }\n  .settingsContainer {\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n  }\n\n  .settings:hover {\n    background-color: darkgray;\n  }\n\n  .modal-background {\n    background-color: transparent;\n  }\n</style>\n\n{#if showChangeProfilePicture}\n  <ProfilePictureModal bind:showChangeProfilePicture {user} />\n{/if}\n\n<ProfilePicture\n  {imgSrc}\n  on:click={() => {\n    showProfileMenu = !showProfileMenu;\n  }} />\n\n<div class=\"modal\" class:is-active={showProfileMenu}>\n  <div\n    class=\"modal-background\"\n    on:click={() => {\n      showProfileMenu = false;\n    }} />\n  <div class=\"modal-card\">\n    <header class=\"modal-card-head\">\n      <ProfilePicture\n        {imgSrc}\n        size=\"L\"\n        hasCameraIcon=\"true\"\n        on:click={() => {\n          showChangeProfilePicture = true;\n        }} />\n      {#if user.displayName}\n        <span class=\"has-text-weight-semibold\">{user.displayName}</span>\n      {/if}\n      <span class=\"has-text-weight-medium\">{user.email}</span>\n    </header>\n    <section class=\"modal-card-body\">\n      <Link className=\"has-text-white\" to=\"user/profile\">\n        <div class=\"settingsContainer\">\n          <div\n            class=\"settings\"\n            on:click={() => {\n              showProfileMenu = false;\n            }}>\n            <span class=\"icon is-medium\">\n              <i class=\"fas fa-cog fas fa-lg \" />\n            </span>\n            <span>Manage Profile</span>\n          </div>\n        </div>\n      </Link>\n    </section>\n    <footer class=\"modal-card-foot\">\n      <button\n        class=\"button is-dark is-rounded\"\n        class:is-loading={isLoading}\n        on:click={logout}>\n        Log out\n      </button>\n    </footer>\n  </div>\n</div>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import { auth } from \"../../conf/firebase\";\n  const dispatch = createEventDispatcher();\n  export let imgSrc;\n  export let size = \"M\";\n  export let hasCameraIcon = false;\n</script>\n\n<style>\n  .profileImage {\n    border-radius: 50%;\n    height: 100%;\n    overflow: hidden;\n    max-width: max-content;\n  }\n\n  .imageBackground {\n    cursor: pointer;\n    border-radius: 50%;\n    z-index: 40;\n    position: relative;\n    overflow: hidden;\n  }\n\n  .backgroundM {\n    padding: 3px;\n    height: 40px;\n    width: 40px;\n  }\n\n  .backgroundL {\n    padding: 6px;\n    height: 80px;\n    width: 80px;\n  }\n\n  .icon {\n    border-radius: 50%;\n    position: relative;\n    right: 1.5em;\n    top: 3em;\n    z-index: 50;\n    cursor: pointer;\n  }\n\n  .profilePictureContainer {\n    display: flex;\n  }\n\n  .changeProfilePicture {\n    margin-left: 1.5em;\n  }\n\n  .profilePictures {\n    margin: 10px;\n  }\n\n  .imageContainer {\n    display: flex;\n    flex-direction: column;\n    border-radius: 50%;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n</style>\n\n<div\n  class=\"profilePictureContainer\"\n  class:changeProfilePicture={hasCameraIcon}\n  class:profilePictures={!hasCameraIcon}>\n  <div\n    class=\"imageBackground has-background-black-ter background{size.toUpperCase()}\"\n    on:click={() => {\n      dispatch('click');\n    }}>\n    <div class=\"imageContainer\">\n      <img\n        class=\"profileImage\"\n        type=\"image/png\"\n        alt=\"Profile\"\n        src={imgSrc ? imgSrc : '/media/profile_pics/user.png'} />\n    </div>\n  </div>\n  {#if hasCameraIcon}\n    <span\n      class=\"icon is-medium has-text-black-ter has-background-white-ter\"\n      on:click={() => {\n        dispatch('click');\n      }}>\n      <i class=\"fas fa-camera fas fa-lg \" />\n    </span>\n  {/if}\n</div>\n",
    "<script>\n  import { auth } from \"../../../conf/firebase\";\n  import GoogleLogin from \"../GoogleLogin.svelte\";\n  import { validateEmail, validatePassword } from \"../../utils/helper\";\n  import SignUpStepEmail from \"./SignupStepEmail.svelte\";\n  import SignUpStepPassword from \"./SignupStepPassword.svelte\";\n  import SignUpStepVerification from \"./SignupStepVerification.svelte\";\n  let showDialog = false;\n  let signUpLoading = false;\n  let continueDisabled = true;\n\n  const formValues = {\n    name: \"\",\n    nameValid: null,\n    email: \"\",\n    emailValid: null,\n    password: \"\",\n    passwordValid: null\n  };\n\n  let signUpSteps = [\n    {\n      name: \"email\",\n      component: SignUpStepEmail,\n      nextButtonName: \"Continue\",\n      clickFunction: () => {\n        selectedIndex++;\n      }\n    },\n    {\n      name: \"password\",\n      component: SignUpStepPassword,\n      nextButtonName: \"Register\",\n      clickFunction: () => {\n        signUp();\n      }\n    }\n  ];\n\n  let selectedIndex = 0;\n\n  let submitted;\n\n  function signUp() {\n    console.log(\"Signup called\");\n    signUpLoading = true;\n    auth\n      .createUserWithEmailAndPassword(formValues.email, formValues.password)\n      .then(() => {\n        auth.currentUser\n          .updateProfile({\n            displayName: formValues.name\n          })\n          .then(() => {\n            console.log(\"Created user with name\");\n            signUpLoading = false;\n          })\n          .catch(() => {\n            signUpLoading = false;\n            console.log(\"Could not create user\");\n          });\n      });\n  }\n</script>\n\n<style>\n  .backButton {\n    background-color: transparent;\n    border: 0;\n    padding-left: 0px !important;\n  }\n  .footerContainer {\n    display: flex;\n    align-items: center;\n  }\n\n  .modal-card-head {\n    border-bottom: 0px;\n    flex-flow: row-reverse;\n    justify-content: space-between;\n    padding-bottom: 10px;\n  }\n\n  .modal-card-body {\n    padding-top: 0px;\n  }\n\n  .modal-card {\n    max-width: 440px;\n    min-height: 400px;\n  }\n</style>\n\n<div>\n  <button\n    class=\"button is-primary is-rounded\"\n    on:click={() => {\n      showDialog = true;\n    }}>\n    <strong>Register</strong>\n  </button>\n  <div class=\"modal is-active\" class:is-active={showDialog}>\n    <div\n      class=\"modal-background\"\n      on:click={() => {\n        showDialog = false;\n      }} />\n    <div class=\"modal-card\">\n      <header class=\"modal-card-head\">\n        <button\n          class=\"button is-rounded\"\n          aria-label=\"continue\"\n          disabled={continueDisabled}\n          class:is-loading={signUpLoading}\n          on:click={signUpSteps[selectedIndex].clickFunction}>\n          {signUpSteps[selectedIndex].nextButtonName}\n        </button>\n        {#if selectedIndex > 0}\n          <div\n            class=\"button is-rounded backButton\"\n            aria-label=\"continue\"\n            on:click={() => {\n              selectedIndex--;\n            }}>\n            <i class=\"fas fa-arrow-left has-text-white\" />\n          </div>\n        {/if}\n      </header>\n      <section class=\"modal-card-body\">\n        <svelte:component\n          this={signUpSteps[selectedIndex].component}\n          bind:continueDisabled\n          {formValues} />\n      </section>\n\n      <footer class=\"modal-card-foot\">\n        <div class=\"footerContainer\">\n          <span>Or register via</span>\n          <GoogleLogin />\n        </div>\n      </footer>\n    </div>\n  </div>\n\n</div>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { validateEmail } from \"../../utils/helper\";\n  export let formValues;\n  export let continueDisabled;\n\n  let timer;\n\n  function setContinueDisabled() {\n    continueDisabled = !formValues.nameValid || !formValues.emailValid;\n  }\n\n  onMount(() => {\n    setContinueDisabled();\n  });\n</script>\n\n<style>\n  .field {\n    margin-bottom: 20px !important;\n  }\n  .modal-card-title {\n    margin-bottom: 20px;\n  }\n</style>\n\n<div class=\"modal-card-title has-text-white\">Create your account</div>\n<div class=\"field\">\n  <div class=\"control has-icons-left\">\n    <input\n      class=\"input\"\n      type=\"text\"\n      placeholder=\"Name\"\n      bind:value={formValues.name}\n      on:input={() => {\n        formValues.nameValid = formValues.name !== '';\n        setContinueDisabled();\n      }} />\n    <span class=\"icon is-small is-left\">\n      <i class=\"fas fa-user\" />\n    </span>\n  </div>\n</div>\n\n<div class=\"field\">\n  <div class=\"control has-icons-left\">\n    <input\n      class=\"input\"\n      type=\"email\"\n      placeholder=\"Email\"\n      bind:value={formValues.email}\n      on:input={() => {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n          formValues.emailValid = validateEmail(formValues.email);\n          setContinueDisabled();\n        }, 750);\n      }} />\n    <span class=\"icon is-small is-left\">\n      <i class=\"fas fa-envelope\" />\n    </span>\n  </div>\n  {#if formValues.email && formValues.emailValid !== null && !formValues.emailValid}\n    <p class=\"help is-danger\">This email is invalid</p>\n  {/if}\n</div>\n",
    "<script>\n  import { validatePassword } from \"../../utils/helper\";\n  import { onMount } from \"svelte\";\n  export let formValues;\n  export let continueDisabled;\n  let timer;\n\n  let showPassword = false;\n\n  function setContinueDisabled() {\n    continueDisabled = !formValues.passwordValid;\n  }\n  function toggleShowPassword() {\n    showPassword = !showPassword;\n  }\n\n  onMount(() => {\n    setContinueDisabled();\n  });\n</script>\n\n<style>\n  .icon {\n    pointer-events: initial !important;\n    cursor: pointer;\n  }\n  .modal-card-title {\n    margin-bottom: 20px;\n  }\n  .field {\n    margin-bottom: 20px !important;\n  }\n</style>\n\n<div>\n  <div class=\"modal-card-title has-text-white\">Choose your password</div>\n  <div class=\"field\">\n    <div class=\"control has-icons-left has-icons-right\">\n      {#if showPassword}\n        <input\n          class=\"input\"\n          type=\"text\"\n          placeholder=\"Password\"\n          autocomplete=\"new-password\"\n          bind:value={formValues.password}\n          on:input={() => {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n              formValues.passwordValid = validatePassword(formValues.password);\n              setContinueDisabled();\n            }, 750);\n          }} />\n      {:else}\n        <input\n          class=\"input\"\n          type=\"password\"\n          placeholder=\"Password\"\n          autocomplete=\"new-password\"\n          bind:value={formValues.password}\n          on:input={() => {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n              formValues.passwordValid = validatePassword(formValues.password);\n              setContinueDisabled();\n            }, 750);\n          }} />\n      {/if}\n      <span class=\"icon is-small is-left\">\n        <i class=\"fas fa-key\" />\n      </span>\n      {#if showPassword}\n        <span class=\"icon is-small is-right\" on:click={toggleShowPassword}>\n          <i class=\"fas fa-eye\" />\n        </span>\n      {:else}\n        <span class=\"icon is-small is-right\" on:click={toggleShowPassword}>\n          <i class=\"fas fa-eye-slash\" />\n        </span>\n      {/if}\n    </div>\n    {#if formValues.password && formValues.passwordValid !== null && !formValues.passwordValid}\n      <p class=\"help is-danger\">This password is invalid</p>\n    {/if}\n\n  </div>\n  <span>\n    By registering you accept the terms and conditions privacy policy of\n    DarthCrawl.\n  </span>\n</div>\n",
    "<script>\n  import { onMount, onDestroy } from \"svelte\";\n  import { auth } from \"../../../conf/firebase\";\n  import { interval, from } from \"rxjs\";\n  import { flatMap, map, takeWhile } from \"rxjs/operators\";\n  import Spinner from \"../../utils/Spinner.svelte\";\n\n  let userVerified = false;\n  function reload(currentUser) {\n    if (!currentUser) return Promise.resolve(\"No User\");\n    console.log(\"Reload\");\n    return currentUser.reload();\n  }\n\n  const emailVerified$ = interval(2000).pipe(\n    flatMap(() => from(reload(auth.currentUser))),\n    map(() => {\n      if (auth.currentUser) return auth.currentUser.emailVerified;\n      return false;\n    }),\n    takeWhile(() => !userVerified)\n  );\n\n  const subscribe = emailVerified$.subscribe(verified => {\n    userVerified = verified;\n  });\n\n  onDestroy(() => {\n    subscribe.unsubscribe();\n  });\n</script>\n\n<style>\n  .spinnerContainer {\n    margin-top: 40px;\n    display: flex;\n    justify-content: center;\n  }\n\n  .modal-card {\n    max-width: 440px;\n    min-height: 400px;\n  }\n\n  .modal-card-head {\n    border-bottom: 0px;\n    flex-flow: row-reverse;\n    justify-content: space-between;\n    padding-bottom: 10px;\n  }\n</style>\n\n<div class=\"modal is-active\" class:is-active={!userVerified}>\n  <div class=\"modal-background\" />\n  <div class=\"modal-card\">\n\n    <header class=\"modal-card-head\" />\n    <section class=\"modal-card-body\">\n      <div class=\"has-text-white\">\n        Please verify your email by clickling the link in the verification mail\n        we just sent you. This view will automatically update once email is\n        verified.\n        {#if !userVerified}\n          <div class=\"spinnerContainer\">\n            <Spinner />\n          </div>\n        {/if}\n      </div>\n    </section>\n  </div>\n</div>\n",
    "<script>\n  import { fade } from 'svelte/transition';\n  export let radius;\n  export let stroke;\n  export let progress;\n\n  $: normalizedRadius = radius - stroke * 2;\n  $: circumference = normalizedRadius * 2 * Math.PI;\n  $: offset = circumference - (progress / 100) * circumference;\n</script>\n\n<style>\n  .progressCircle {\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 1;\n  }\n  .progress-ring__circle {\n    transition: 0.35s stroke-dashoffset;\n    transform: rotate(-90deg);\n    transform-origin: 50% 50%;\n    stroke-dashoffset: 226;\n  }\n</style>\n\n<svg class=\"progressCircle\" width={radius * 2} height={radius * 2} out:fade>\n  <circle\n    class=\"progress-ring__circle\"\n    stroke=\"white\"\n    stroke-width={stroke}\n    stroke-dasharray={circumference + ' ' + circumference}\n    fill=\"transparent\"\n    style=\"stroke-dashoffset:{offset}\"\n    r={normalizedRadius}\n    cx={radius}\n    cy={radius} />\n</svg>\n",
    "<style>\n  .sk-chase {\n    width: 40px;\n    height: 40px;\n    position: relative;\n    animation: sk-chase 2.5s infinite linear both;\n  }\n\n  .sk-chase-dot {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    animation: sk-chase-dot 2s infinite ease-in-out both;\n  }\n\n  .sk-chase-dot:before {\n    content: \"\";\n    display: block;\n    width: 25%;\n    height: 25%;\n    background-color: #fff;\n    border-radius: 100%;\n    animation: sk-chase-dot-before 2s infinite ease-in-out both;\n  }\n\n  .sk-chase-dot:nth-child(1) {\n    animation-delay: -1.1s;\n  }\n  .sk-chase-dot:nth-child(2) {\n    animation-delay: -1s;\n  }\n  .sk-chase-dot:nth-child(3) {\n    animation-delay: -0.9s;\n  }\n  .sk-chase-dot:nth-child(4) {\n    animation-delay: -0.8s;\n  }\n  .sk-chase-dot:nth-child(5) {\n    animation-delay: -0.7s;\n  }\n  .sk-chase-dot:nth-child(6) {\n    animation-delay: -0.6s;\n  }\n  .sk-chase-dot:nth-child(1):before {\n    animation-delay: -1.1s;\n  }\n  .sk-chase-dot:nth-child(2):before {\n    animation-delay: -1s;\n  }\n  .sk-chase-dot:nth-child(3):before {\n    animation-delay: -0.9s;\n  }\n  .sk-chase-dot:nth-child(4):before {\n    animation-delay: -0.8s;\n  }\n  .sk-chase-dot:nth-child(5):before {\n    animation-delay: -0.7s;\n  }\n  .sk-chase-dot:nth-child(6):before {\n    animation-delay: -0.6s;\n  }\n\n  @keyframes sk-chase {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  @keyframes sk-chase-dot {\n    80%,\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  @keyframes sk-chase-dot-before {\n    50% {\n      transform: scale(0.4);\n    }\n    100%,\n    0% {\n      transform: scale(1);\n    }\n  }\n</style>\n\n<div class=\"sk-chase\">\n  <div class=\"sk-chase-dot\" />\n  <div class=\"sk-chase-dot\" />\n  <div class=\"sk-chase-dot\" />\n  <div class=\"sk-chase-dot\" />\n  <div class=\"sk-chase-dot\" />\n  <div class=\"sk-chase-dot\" />\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}